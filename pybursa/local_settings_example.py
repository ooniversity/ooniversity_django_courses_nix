"""
Django settings for pybursa project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u#62a83!q(jk%3n&p1(ljeg^@o&*-)y6wvk^l-o8lj=%df%ju9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost']

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

ADMINS = [('Alex', 'ab@gmail.com')]

EMAIL_HOST = '127.0.0.1'

EMAIL_PORT = '1025'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },

        'file_courses_debug': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'courses_logger.log',
            'formatter': 'simple'
        },
        'file_courses_info': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'courses_logger.log',
            'formatter': 'simple'
        },
        'file_courses_warning': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': 'courses_logger.log',
            'formatter': 'simple'
        },
        'file_courses_error': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': 'courses_logger.log',
            'formatter': 'simple'
        },
        'file_students_debug': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'students_logger.log',
            'formatter': 'verbose'
        },
        'file_students_info': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'students_logger.log',
            'formatter': 'verbose'
        },
        'file_students_warning': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': 'students_logger.log',
            'formatter': 'verbose'
        },
        'file_students_error': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': 'students_logger.log',
            'formatter': 'verbose'
        },
    },
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(funcName)s %(message)s'
        },
        'simple': {
            'format': '%(levelname)s: %(message)s'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
        'courses': {
            'handlers': ['console', 'file_courses_debug', 'file_courses_info',
                         'file_courses_warning', 'file_courses_error'],
            'level': 'DEBUG'
        },
        'students': {
            'handlers': ['console', 'file_students_debug', 'file_students_info',
                         'file_students_warning', 'file_students_error'],
            'level': 'WARNING'
        },
    },
}